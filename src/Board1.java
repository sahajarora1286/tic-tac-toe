
import java.awt.Color;

import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.util.Random;

import javax.swing.JButton;




/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author sahajarora1286
 */
public class Board1 extends javax.swing.JFrame {
    
    private String turn;
    private final String player1;
    private final String computer;
    private final ArrayList<JButton> buttons ;
    
    private JButton move;
   
    /**
     * Creates new form NewJFrame
     * @param t
     * 
     */
    public Board1(String t) {
        
        initComponents();
        this.buttons = new ArrayList<JButton>();
        this.move = new JButton();
        buttons.add(0, jButton1);
        buttons.add(1, jButton2);
        buttons.add(2, jButton3);
        buttons.add(3, jButton4);
        buttons.add(4, jButton5);
        buttons.add(5, jButton6);
        buttons.add(6, jButton7);
        buttons.add(7, jButton8);
        buttons.add(8, jButton9);
        
        
        turn = t;
        player1 = t;
        if (player1.equals("X")){
            computer = "O";
        } else {
            computer = "X";
        }
        
        jButton1.setText("");
        jButton2.setText("");
        jButton3.setText("");
        jButton4.setText("");
        jButton5.setText("");
        jButton6.setText("");
        jButton7.setText("");
        jButton8.setText("");
        jButton9.setText("");
        jLabel1.setText("Player 1's turn: ");
        this.pack();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tic Tac Toe");
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setResizable(false);

        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel1.setText("          ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(109, 109, 109))
            .addGroup(layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private boolean canPlay(JButton j){
        boolean result = true;
        if (!j.getText().equals("")){
            result = false;
        }
        return result;
    }
    private void toggleTurn(){
        if (turn.equals(player1)){
            turn = computer;
        } else {
            turn = player1;
        }
    }
    private void toggleLabel(){
        
        if (turn.equals(player1)){
            jLabel1.setText("Player 1's turn:");
            
        } else {
            jLabel1.setText("Computer's turn:");
            
        }
    }
    
    private boolean canPlayerWin(){
        boolean result = false;
        for (int i = 0;i<8;i=i+3){
            
                    //rows check
                    if (buttons.get(i).getText().equals(buttons.get(i+1).getText()) && !buttons.get(i).getText().equals("") && buttons.get(i+2).getText().equals("")){
                        move = buttons.get(i+2);
                        result = true;
                        return result;
                    
                    }
                    if (buttons.get(i).getText().equals(buttons.get(i+2).getText()) && !buttons.get(i).getText().equals("") && buttons.get(i+1).getText().equals("")){
                        move = buttons.get(i+1);
                        result = true;
                        return result;
                    }
                    if (buttons.get(i+1).getText().equals(buttons.get(i+2).getText()) && !buttons.get(i+1).getText().equals("") && buttons.get(i).getText().equals("")){
                        move = buttons.get(i);
                        result = true;
                        return result;
                    }
                    
                    //columns check
        }
        for (int i = 0;i<3;i++){
                    if (buttons.get(i).getText().equals(buttons.get(i+3).getText()) && !buttons.get(i).getText().equals("") && buttons.get(i+6).getText().equals("")){
                        move = buttons.get(i+6);
                        result = true;
                        return result;
                    }
                    
                    if (buttons.get(i).getText().equals(buttons.get(i+6).getText()) && !buttons.get(i).getText().equals("") && buttons.get(i+3).getText().equals("")){
                        move = buttons.get(i+3);
                        result = true;
                        return result;
                    }
                    
                    if (buttons.get(i+3).getText().equals(buttons.get(i+6).getText()) && !buttons.get(i+3).getText().equals("") && buttons.get(i).getText().equals("")){
                        move = buttons.get(i);
                        result = true;
                        return result;
                    }
        }
            
            
        
        //diagonals check
        if (buttons.get(0).getText().equals(buttons.get(4).getText()) && !buttons.get(0).getText().equals("") && buttons.get(8).getText().equals("")){
            move = buttons.get(8);
            result = true;
            return result;
        }
        if (buttons.get(0).getText().equals(buttons.get(8).getText()) && !buttons.get(0).getText().equals("") && buttons.get(4).getText().equals("")){
            move = buttons.get(4);
            result = true;
            return result;
        }
        
        if (buttons.get(4).getText().equals(buttons.get(8).getText()) && !buttons.get(4).getText().equals("") && buttons.get(0).getText().equals("")){
            move = buttons.get(0);
            result = true;
            return result;
        }
        
        if (buttons.get(2).getText().equals(buttons.get(4).getText()) && !buttons.get(2).getText().equals("") && buttons.get(6).getText().equals("")){
            move = buttons.get(6);
            result = true;
            return result;
        }
        
        if (buttons.get(2).getText().equals(buttons.get(6).getText()) && !buttons.get(2).getText().equals("") && buttons.get(4).getText().equals("")){
            move = buttons.get(4);
            result = true;
            return result;
        }
        
        if (buttons.get(4).getText().equals(buttons.get(6).getText()) && !buttons.get(4).getText().equals("") && buttons.get(2).getText().equals("")){
            move = buttons.get(2);
            result = true;
            return result;
        }
        return result;
    }
    
    private void machinePlay(){
        if (canPlayerWin()){
            move.setText(computer);
            if (computer.equals("X")){
                move.setBackground(Color.RED);
            
            } else if (computer.equals("O")) {
                move.setBackground(Color.GREEN);
            
            }
        } else {
            
        
        Random r = new Random();
        int  j = r.nextInt(9);
        
        while (!canPlay(buttons.get(j))){
            j=r.nextInt(9);
        }
        
        
        buttons.get(j).setText(computer);
        if (computer.equals("X")){
            buttons.get(j).setBackground(Color.RED);
            
        } else if (computer.equals("O")) {
            buttons.get(j).setBackground(Color.GREEN);
            
        }
        
        } 
      
        
        
        if (won()){
            if (turn.equals(player1)){
                endGame(player1);
            } else {
                endGame(computer);
            }
        
        } else {
            if (!jButton1.getText().equals("") && !jButton2.getText().equals("") && !jButton3.getText().equals("") && !jButton4.getText().equals("") && !jButton5.getText().equals("") && !jButton6.getText().equals("") && !jButton7.getText().equals("") && !jButton8.getText().equals("") && !jButton9.getText().equals("") ){
                JOptionPane.showMessageDialog(null,"Draw!", "Game Over!", JOptionPane.WARNING_MESSAGE);
                this.setVisible(false);
                MainScreen mn = new MainScreen();
                mn.setVisible(true);
            }
            
            else{
            
            toggleTurn();
            
            
            }
        }
          
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jButton1.getText().equals("")){
        
        if (turn.equals("X")){
            jButton1.setBackground(Color.RED);
            jButton1.setText(turn);
        } else {
            jButton1.setBackground(Color.GREEN);
            jButton1.setText(turn);
        }
        
        jButton1.setText(turn);
        
            
        
        
        if (won()){
            if (turn.equals(player1)){
                endGame(player1);
            } else {
                endGame(computer);
            }
        
        } else {
            if (!jButton1.getText().equals("") && !jButton2.getText().equals("") && !jButton3.getText().equals("") && !jButton4.getText().equals("") && !jButton5.getText().equals("") && !jButton6.getText().equals("") && !jButton7.getText().equals("") && !jButton8.getText().equals("") && !jButton9.getText().equals("") ){
                JOptionPane.showMessageDialog(null,"Draw!", "Game Over!", JOptionPane.WARNING_MESSAGE);
                this.setVisible(false);
                MainScreen mn = new MainScreen();
                mn.setVisible(true);
            } else{
            
            toggleTurn();
            
            machinePlay();
            }
        }
        
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         if (jButton2.getText().equals("")){
        
        
        if (turn.equals("X")){
            jButton2.setBackground(Color.RED);
            jButton2.setText(turn);
        } else {
            jButton2.setBackground(Color.GREEN);
            jButton2.setText(turn);
        }
        
        jButton2.setText(turn);
        
            
        
        if (won()){
            if (turn.equals(player1)){
                endGame(player1);
            } else {
                endGame(computer);
            }
        } else {
            if (!jButton1.getText().equals("") && !jButton2.getText().equals("") && !jButton3.getText().equals("") && !jButton4.getText().equals("") && !jButton5.getText().equals("") && !jButton6.getText().equals("") && !jButton7.getText().equals("") && !jButton8.getText().equals("") && !jButton9.getText().equals("") ){
                JOptionPane.showMessageDialog(null,"Draw!", "Game Over!", JOptionPane.WARNING_MESSAGE);
                this.setVisible(false);
                MainScreen mn = new MainScreen();
                mn.setVisible(true);
            }
            
            else{
            
            toggleTurn();
            
            machinePlay();
            }
        }
        
         }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (jButton4.getText().equals("")){
        
        
        if (turn.equals("X")){
            jButton4.setBackground(Color.RED);
            jButton4.setText(turn);
        } else {
            jButton4.setBackground(Color.GREEN);
            jButton4.setText(turn);
        }
        
        jButton4.setText(turn);
        
           
        
        
        if (won()){
            if (turn.equals(player1)){
                endGame(player1);
            } else {
                endGame(computer);
            }
        }
        else {
            if (!jButton1.getText().equals("") && !jButton2.getText().equals("") && !jButton3.getText().equals("") && !jButton4.getText().equals("") && !jButton5.getText().equals("") && !jButton6.getText().equals("") && !jButton7.getText().equals("") && !jButton8.getText().equals("") && !jButton9.getText().equals("") ){
                JOptionPane.showMessageDialog(null,"Draw!", "Game Over!", JOptionPane.WARNING_MESSAGE);
                this.setVisible(false);
                MainScreen mn = new MainScreen();
                mn.setVisible(true);
            }
            
           else{
            
            toggleTurn();
            
            machinePlay();
            }
        }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
         if (jButton3.getText().equals("")){
        
        
        if (turn.equals("X")){
            jButton3.setBackground(Color.RED);
            jButton3.setText(turn);
        } else {
            jButton3.setBackground(Color.GREEN);
            jButton3.setText(turn);
        }
        
        jButton3.setText(turn);
        
            
        if (won()){
            if (turn.equals(player1)){
                endGame(player1);
            } else {
                endGame(computer);
            }
        }
        else {
            if (!jButton1.getText().equals("") && !jButton2.getText().equals("") && !jButton3.getText().equals("") && !jButton4.getText().equals("") && !jButton5.getText().equals("") && !jButton6.getText().equals("") && !jButton7.getText().equals("") && !jButton8.getText().equals("") && !jButton9.getText().equals("") ){
                JOptionPane.showMessageDialog(null,"Draw!", "Game Over!", JOptionPane.WARNING_MESSAGE);
                this.setVisible(false);
                MainScreen mn = new MainScreen();
                mn.setVisible(true);
            }
            
           else{
            
            toggleTurn();
            
            machinePlay();
            }
               
        
        }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
         if (jButton8.getText().equals("")){
        
        
        if (turn.equals("X")){
            jButton8.setBackground(Color.RED);
            jButton8.setText(turn);
        } else {
            jButton8.setBackground(Color.GREEN);
            jButton8.setText(turn);
        }
        
        jButton8.setText(turn);
        
           
        
        
        if (won()){
            if (turn.equals(player1)){
                endGame(player1);
            } else {
                endGame(computer);
            }
        }
        else {
            if (!jButton1.getText().equals("") && !jButton2.getText().equals("") && !jButton3.getText().equals("") && !jButton4.getText().equals("") && !jButton5.getText().equals("") && !jButton6.getText().equals("") && !jButton7.getText().equals("") && !jButton8.getText().equals("") && !jButton9.getText().equals("") ){
                JOptionPane.showMessageDialog(null,"Draw!", "Game Over!", JOptionPane.WARNING_MESSAGE);
                this.setVisible(false);
                MainScreen mn = new MainScreen();
                mn.setVisible(true);
            }
            
            else{
            
            toggleTurn();
            
            machinePlay();
            }
        
        }
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
         if (jButton5.getText().equals("")){
        
        
        if (turn.equals("X")){
            jButton5.setBackground(Color.RED);
            jButton5.setText(turn);
        } else {
            jButton5.setBackground(Color.GREEN);
            jButton5.setText(turn);
        }
        
        jButton5.setText(turn);
        
            
        
        
        if (won()){
            if (turn.equals(player1)){
                endGame(player1);
            } else {
                endGame(computer);
            }
        }
        else {
            if (!jButton1.getText().equals("") && !jButton2.getText().equals("") && !jButton3.getText().equals("") && !jButton4.getText().equals("") && !jButton5.getText().equals("") && !jButton6.getText().equals("") && !jButton7.getText().equals("") && !jButton8.getText().equals("") && !jButton9.getText().equals("") ){
                JOptionPane.showMessageDialog(null,"Draw!", "Game Over!", JOptionPane.WARNING_MESSAGE);
                this.setVisible(false);
                MainScreen mn = new MainScreen();
                mn.setVisible(true);
            }
            
            else{
            
            toggleTurn();
            
            machinePlay();
            }
        }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
         if (jButton6.getText().equals("")){
        
        
        if (turn.equals("X")){
            jButton6.setBackground(Color.RED);
            jButton6.setText(turn);
        } else {
            jButton6.setBackground(Color.GREEN);
            jButton6.setText(turn);
        }
        
        jButton6.setText(turn);
        
            
        
        
        if (won()){
            if (turn.equals(player1)){
                endGame(player1);
            } else {
                endGame(computer);
            }
        }
        else {
            if (!jButton1.getText().equals("") && !jButton2.getText().equals("") && !jButton3.getText().equals("") && !jButton4.getText().equals("") && !jButton5.getText().equals("") && !jButton6.getText().equals("") && !jButton7.getText().equals("") && !jButton8.getText().equals("") && !jButton9.getText().equals("") ){
                JOptionPane.showMessageDialog(null,"Draw!", "Game Over!", JOptionPane.WARNING_MESSAGE);
                this.setVisible(false);
                MainScreen mn = new MainScreen();
                mn.setVisible(true);
            }
            
            else{
            
            toggleTurn();
            
            machinePlay();
            }
        
        }
        }
    }//GEN-LAST:event_jButton6ActionPerformed
    private void endGame(String winner){
        if (winner.equals(player1)){
            JOptionPane.showMessageDialog(null,"Player 1 WON!", "Game Over!", JOptionPane.WARNING_MESSAGE);
        } else if (winner.equals(computer)) {
            JOptionPane.showMessageDialog(null,"Computer WON!", "Game Over!", JOptionPane.WARNING_MESSAGE);
        }
        this.setVisible(false);
        
        MainScreen mn = new MainScreen();
                mn.setVisible(true);
    }
   
    private boolean won(){
        
        boolean result = false;
        if (jButton1.getText().equals("") && jButton2.getText().equals("") &jButton3.getText().equals("")&& jButton4.getText().equals("")&& jButton5.getText().equals("") && jButton6.getText().equals("")&& jButton7.getText().equals("") && jButton8.getText().equals("") && jButton9.getText().equals("")){
            return false;
        }
        if (jButton1.getText().equals(jButton2.getText()) && jButton1.getText().equals(jButton3.getText()) && !jButton1.getText().equals("")){
           result = true;
        }
        
        if (jButton4.getText().equals(jButton5.getText()) && jButton4.getText().equals(jButton6.getText()) && !jButton4.getText().equals("")){
            result = true;
        }
        
        if (jButton7.getText().equals(jButton8.getText()) && jButton7.getText().equals(jButton9.getText()) && !jButton7.getText().equals("")){
            result = true;
        }
        
        if (jButton1.getText().equals(jButton4.getText()) && jButton1.getText().equals(jButton7.getText()) && !jButton1.getText().equals("")){
            result = true;
        }
        
        if (jButton2.getText().equals(jButton5.getText()) && jButton2.getText().equals(jButton8.getText()) && !jButton2.getText().equals("")){
            result = true;
        }
        
        if (jButton3.getText().equals(jButton6.getText()) && jButton3.getText().equals(jButton9.getText()) && !jButton3.getText().equals("")){
            result = true;
        }
        
        if (jButton1.getText().equals(jButton5.getText()) && jButton1.getText().equals(jButton9.getText()) && !jButton1.getText().equals("")){
            result = true;
        }
        
        if (jButton3.getText().equals(jButton5.getText()) && jButton3.getText().equals(jButton7.getText()) && !jButton3.getText().equals("")){
            result = true;
        }
        
        
       return result; 
    }
    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
         if (jButton7.getText().equals("")){
        
        
        if (turn.equals("X")){
            jButton7.setBackground(Color.RED);
            jButton7.setText(turn);
        } else {
            jButton7.setBackground(Color.GREEN);
            jButton7.setText(turn);
        }
        
        jButton7.setText(turn);
        
            
        
        
        if (won()){
            if (turn.equals(player1)){
                endGame(player1);
            } else {
                endGame(computer);
            }
        }
       else {
            if (!jButton1.getText().equals("") && !jButton2.getText().equals("") && !jButton3.getText().equals("") && !jButton4.getText().equals("") && !jButton5.getText().equals("") && !jButton6.getText().equals("") && !jButton7.getText().equals("") && !jButton8.getText().equals("") && !jButton9.getText().equals("") ){
                JOptionPane.showMessageDialog(null,"Draw!", "Game Over!", JOptionPane.WARNING_MESSAGE);
                this.setVisible(false);
                MainScreen mn = new MainScreen();
                mn.setVisible(true);
            }
            
            else{
            
            toggleTurn();
            
            machinePlay();
            }
               
        
        }
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
         if (jButton9.getText().equals("")){
        
        
        if (turn.equals("X")){
            jButton9.setBackground(Color.RED);
            jButton9.setText(turn);
        } else {
            jButton9.setBackground(Color.GREEN);
            jButton9.setText(turn);
        }
        
        jButton9.setText(turn);
        
            
        
        
        if (won()){
            if (turn.equals(player1)){
                endGame(player1);
            } else {
                endGame(computer);
            }
        }
        else {
            if (!jButton1.getText().equals("") && !jButton2.getText().equals("") && !jButton3.getText().equals("") && !jButton4.getText().equals("") && !jButton5.getText().equals("") && !jButton6.getText().equals("") && !jButton7.getText().equals("") && !jButton8.getText().equals("") && !jButton9.getText().equals("") ){
                JOptionPane.showMessageDialog(null,"Draw!", "Game Over!", JOptionPane.WARNING_MESSAGE);
                this.setVisible(false);
                MainScreen mn = new MainScreen();
                mn.setVisible(true);
            }
            
           else{
            
            toggleTurn();
            
            machinePlay();
            }
            
               
        
        }
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
